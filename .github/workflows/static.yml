name: Deploy static content to Pages

on:
  push:
    branches: ["af1"]
  workflow_dispatch:

permissions:
  contents: write      # necessário para o merge
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate:
    name: Validar HTML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar HTMLHint
        run: |
          npm install -g htmlhint

      - name: Rodar validação HTML
        run: |
          htmlhint **/*.html

  deploy:
    name: Deploy para GitHub Pages
    needs: validate
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  merge-to-main:
    name: Merge af1 → main
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout af1
        uses: actions/checkout@v4
        with:
          ref: af1

      - name: Configurar Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Merge para main (forçando conteúdo da af1)
        run: |
          git fetch origin main
          git checkout main
          git merge af1 --no-edit -X theirs --allow-unrelated-histories
          git push origin main


